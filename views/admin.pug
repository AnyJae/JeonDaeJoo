doctype html
html(lang="ko")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title 관리자 대시보드
    link(href="/css/admin.css" rel="stylesheet")
  body
    .dashboard-container
      h1 관리자 대시보드

      section#notice-management
        h2 공지사항 관리
        textarea#new-notice(placeholder="새 공지사항 입력")
        button#upload-notice-btn 공지사항 업로드
        #notice-list
          //- 공지사항 리스트

      section#banner-management
        h2 배너 관리
        input(type="file" id="banner-upload")
        button#upload-banner-btn 배너 업로드
        #banner-list
          //- 배너 리스트

      section#image-upload-management
        h2 이미지 업로드 및 관리
        input(type="file" id="image-upload" multiple)
        button#upload-image-btn 이미지 업로드
        #image-upload-status
          //- 이미지 업로드 상태 표시
        #uploaded-images
          //- 업로드된 이미지 리스트

      //- 로그아웃 버튼
      button#logout-btn 로그아웃

    script.
      // 로그아웃 기능
      document.getElementById('logout-btn').addEventListener('click', function() {
          fetch('/admin/logout', {
              method: 'GET',
              credentials: 'same-origin'
          })
          .then(response => {
              if (response.ok) {
                  window.location.href = '/'; // 메인 페이지로 리디렉션
              } else {
                  alert('로그아웃에 실패했습니다.');
              }
          })
          .catch(error => {
              console.error('로그아웃 중 오류가 발생했습니다:', error);
              alert('로그아웃 중 오류가 발생했습니다.');
          });
      });

      // 이미지 업로드 기능
      document.getElementById('upload-image-btn').addEventListener('click', function() {
          const fileInput = document.getElementById('image-upload');
          const files = fileInput.files;

          if (files.length === 0) {
              alert('이미지 파일을 선택하세요.');
              return;
          }

          const formData = new FormData();
          for (let i = 0; i < files.length; i++) {
              formData.append('images', files[i]);
          }

          fetch('/admin/upload-images', {
              method: 'POST',
              body: formData,
              credentials: 'same-origin'
          })
          .then(response => response.text())
          .then(data => {
              document.getElementById('image-upload-status').textContent = data;
              fileInput.value = ''; // 파일 선택 초기화
              loadUploadedImages(); // 이미지 리스트 다시 로드
          })
          .catch(error => {
              console.error('이미지 업로드 중 오류가 발생했습니다:', error);
              alert('이미지 업로드 중 오류가 발생했습니다.');
          });
      });

      // 이미지 삭제 기능
      function deleteImage(imageName) {
          fetch(`/admin/delete-image?name=${encodeURIComponent(imageName)}`, {
              method: 'DELETE',
              credentials: 'same-origin'
          })
          .then(response => response.text())
          .then(data => {
              alert(data);
              loadUploadedImages(); // 이미지 리스트 다시 로드
          })
          .catch(error => {
              console.error('이미지 삭제 중 오류가 발생했습니다:', error);
              alert('이미지 삭제 중 오류가 발생했습니다.');
          });
      }

      // 업로드된 이미지 로드
      function loadUploadedImages() {
          fetch('/admin/uploaded-images', {
              method: 'GET',
              credentials: 'same-origin'
          })
          .then(response => response.json())
          .then(images => {
              const imageList = document.getElementById('uploaded-images');
              imageList.innerHTML = ''; // 기존 이미지 리스트 초기화

              images.forEach(image => {
                  const div = document.createElement('div');
                  div.classList.add('image-item');

                  const img = document.createElement('img');
                  img.src = `/uploads/${image}`;
                  img.alt = image;
                  img.classList.add('uploaded-image');

                  const deleteButton = document.createElement('button');
                  deleteButton.textContent = '삭제';
                  deleteButton.onclick = () => deleteImage(image);

                  div.appendChild(img);
                  div.appendChild(deleteButton);
                  imageList.appendChild(div);
              });
          });
      }

      // 초기 이미지 로드
      window.onload = loadUploadedImages;